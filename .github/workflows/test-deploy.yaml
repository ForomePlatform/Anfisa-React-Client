# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: add-githubactions-test CI

on:
  push:
    branches: [ main ]
    tags: [ stage ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install
      env:
          REACT_APP_URL_BACKEND: "https://anfisa.forome.dev/app"
    - run: yarn build
      env:
          REACT_APP_URL_BACKEND: "https://anfisa.forome.dev/app"
    - name: Auth AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - name: Open port temporary
      env:
        GROUP: ${{ secrets.AWS_SEC_GROUP_ID }}
      run: |
            aws ec2 authorize-security-group-ingress --group-id $GROUP --protocol tcp --port 22 --cidr `curl https://ipinfo.io/ip`/32
    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY_DEV }}
          SOURCE: "build/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST_DEV }}
          REMOTE_USER: ${{ secrets.REMOTE_USER_DEV }}
          TARGET: ${{ secrets.REMOTE_TARGET_DEV }}
          EXCLUDE: "/node_modules/"
    - name: Auth AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - name: Increment version
      if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
      uses: actions/checkout@v2
    - run: |
            yarn config set version-git-message "[RELEASE] %s"
            yarn version --patch
            git push --tags &&
            git push
    - name: Close opened port
      env:
        GROUP: ${{ secrets.AWS_SEC_GROUP_ID }}
      run: |
            aws ec2 revoke-security-group-ingress --group-id $GROUP --protocol tcp --port 22 --cidr `curl https://ipinfo.io/ip`/32