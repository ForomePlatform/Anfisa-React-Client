# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: add-githubactions-test CI

on:
  push:
    branches:
      - 'FOROME-*'
      - '!main'
      - '!develop'
    tags: [ stage ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Build
      uses: actions/checkout@v2
    - run: |
            git config --global user.name 'evgeniy-chernomortsev'
            git config --global user.email 'evgeniy.chernomortsev@quantori.com'
    - run: yarn install
      env:
          REACT_APP_URL_BACKEND: "https://feature-sandbox.forome.dev/app"
          REACT_APP_IGV_SERVICE_URL: "https://anfisa-bams.s3.us-south.cloud-object-storage.appdomain.cloud"
    - run: yarn build
      env:
          REACT_APP_URL_BACKEND: "https://feature-sandbox.forome.dev/app"
          REACT_APP_IGV_SERVICE_URL: "https://anfisa-bams.s3.us-south.cloud-object-storage.appdomain.cloud" 
    
    - name: Auth AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - name: Open port temporary
      env:
        GROUP: ${{ secrets.AWS_SEC_GROUP_ID }}
      run: |
            aws ec2 authorize-security-group-ingress \
            --group-id $GROUP \
            --ip-permissions IpProtocol=tcp,FromPort=22,ToPort=22,IpRanges='[{CidrIp='`curl https://ipinfo.io/ip`/32',Description="GitHub_runner"}]'
    - name: commands via ssh
      uses: appleboy/ssh-action@master
      env:
        SHA: ${{ github.sha }}
        BRANCH: ${{ github.ref_name }}
      with:
        host: ${{ secrets.REMOTE_HOST_DEV }}
        username: ${{ secrets.REMOTE_USER_DEV }}
        key: ${{ secrets.SERVER_SSH_KEY_DEV }}
        port: 22
        envs: SHA,BRANCH
        script: |
          echo "I am $SHA"
          echo "I am $BRANCH"
          mkdir /home/forome/anfisa_front/$BRANCH
          sudo cp /etc/nginx/conf.d/sandbox/FOROME-502.conf /etc/nginx/conf.d/sandbox/$BRANCH.conf
          sudo sed -i 's/FOROME-502/'$BRANCH'/g' /etc/nginx/conf.d/sandbox/$BRANCH.conf
          sudo systemctl reload nginx
    
    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY_DEV }}
          SOURCE: "build/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST_DEV }}
          REMOTE_USER: ${{ secrets.REMOTE_USER_DEV }}
          TARGET: /home/forome/anfisa_front/'${{ github.ref_name }}'
          EXCLUDE: "/node_modules/"

    - name: Auth AWS
      if: always()
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - name: Close opened port
      env:
        GROUP: ${{ secrets.AWS_SEC_GROUP_ID }}
      run: |
            aws ec2 revoke-security-group-ingress --group-id $GROUP --protocol tcp --port 22 --cidr `curl https://ipinfo.io/ip`/32
