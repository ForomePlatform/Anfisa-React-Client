trigger:
  tags:
    include:
    - '[RELEASE]*'
  # branches:
  #   include:
  #     - develop
  # tags:
  #   include:
  #     - '[RELEASE]*'
  # paths:
  #   exclude:
  #     - /*
  # #   exclude:
  # #     - '.azure/pipelines/**'
  # batch: true

pool:
  vmImage: ubuntu-20.04

steps:
- checkout: self

- task: Bash@3
  displayName: 'Set variables'
  inputs:
    targetType: 'inline'
    script: |
      packageName=$(cat package.json | jq -r .name)
      packageVersion=$(cat package.json | jq -r .version)
      echo "##vso[build.updatebuildnumber]${packageVersion}.$(Build.BuildId)"
      echo "##vso[task.setvariable variable=packageName]${packageName}"
      echo "##vso[task.setvariable variable=packageVersion]${packageVersion}"
      echo "packageName: ${packageName}"
      echo "packageVersion: ${packageVersion}"

- task: Bash@3
  displayName: 'Run yarn install'
  inputs:
    targetType: 'inline'
    script: |
      yarn install

- task: Bash@3
  displayName: 'Run yarn build'
  inputs:
    targetType: 'inline'
    script: |
      yarn build

- task: CopyFiles@2
  displayName: 'Copy files'
  inputs:
    SourceFolder: 'build'
    Contents: |
      **
      !node_modules/**
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish artifacts'
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: '$(packageName)'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: '$(packageName)'
    publishLocation: 'pipeline'