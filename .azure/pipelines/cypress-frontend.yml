trigger: none
pr: none

pool:
  vmImage: "ubuntu-20.04"

variables:
- group: cypress-frontend-${{ parameters.Environment }}
  
parameters:
- name: Environment
  type: string
  default: qa
  values:
    - qa
    - dev
  
jobs:
  
  - job: "CypressTestsFrontend"
    displayName: "Run cypress tests for Anfisa-React-Client"

    steps:
      - checkout: self
        clean: true

      - task: Bash@3
        displayName: 'create env config file'
        inputs:
          targetType: inline
          script: |
            cat << \EOF > .env.development.local
            BASIC_URL=__BASIC_URL__
            EOF

      - task: qetza.replacetokens.replacetokens-task.replacetokens@5
        displayName: 'replace tokens in env config file'
        inputs:
          rootDirectory: $(System.DefaultWorkingDirectory)
          targetFiles: "*.local"
          tokenPattern: rm

      - task: Bash@3
        displayName: 'yarn install'
        inputs:
          targetType: inline
          script: |
            yarn install

      - task: Bash@3
        displayName: 'run cypress tests'
        inputs:
          targetType: inline
          script: |
            NODE_ENV=development.local yarn cy:run-junit
            cd results
            ls -la

      - task: CopyFiles@2
        displayName: 'copy tests artifacts'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/cypress'
          Contents: |
            videos/**
            screenshots/**
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishPipelineArtifact@1
        displayName: 'publish tests artifacts'
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'cypress-tests-results'
          artifactType: 'pipeline'
          
      - task: PublishTestResults@2
        displayName: 'publish test results'
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/cypress-test-*.xml'
          failTaskOnFailedTests: true
          testRunTitle: 'Cypress frontend tests'
